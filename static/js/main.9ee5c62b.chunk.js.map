{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","Array","from","length","_","i","isFirstPageSelected","isLastPageSelected","pageChangeHandler","page","className","classNames","disabled","href","onClick","map","active","totalItems","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","numberOfItems","indexOfFirstItemOnPage","indexOfLastItemOnPage","selectedItems","slice","min","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAiB,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAE5DC,EAAsC,IAAhBX,EACtBY,EAAqBZ,IAAgBK,EAAMG,OAE3CK,EAAoB,SAACC,GACrBA,EAAO,GAAKA,EAAOZ,GAIvBD,EAAaa,IAGf,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CAAEC,SAAUN,IADjD,SAGE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAAS,kBAAMN,EAAkBb,EAAc,IALjD,oBAWDK,EAAMe,KAAI,SAACN,GAAD,OACT,oBACEC,UAAWC,IAAW,YAAa,CAAEK,OAAQP,IAASd,IADxD,SAIE,mBACE,UAAQ,WACRe,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAkBC,IAJnC,SAMGA,KAREA,MAaT,oBAAIC,UAAWC,IAAW,YAAa,CAAEC,SAAUL,IAAnD,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAMN,EAAkBb,EAAc,IALjD,wBCxDR,IAAMsB,ECNC,SAAoBf,EAAcgB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIlB,EAAMkB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDUG,CAAW,EAAG,IAAIP,KAAI,SAACK,GAAD,qBAAeA,MAE3CG,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoBgC,EAApB,KAEMC,EAAgBX,EAAWd,OAE3B0B,GAA0BlC,EAAc,GAAK8B,EAC7CK,EAAwBD,EAAyBJ,EAEjDM,EAAgBd,EAAWe,MAC/BH,EACAC,GAUF,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWf,EADX,mBACiCkC,EAAyB,EAD1D,cACiE/B,KAAKmC,IAAIH,EAAuBF,GADjG,eACsHA,EADtH,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOV,EACPW,SApBN,SAACC,GACHX,GAAiBW,EAAMC,OAAOH,OAC9BR,EAAe,IAaT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEjB,MAAOmC,EACPlC,QAAS+B,EACT9B,YAAaA,EACbC,aAAc,SAACa,GAAD,OAAUkB,EAAelB,MAGzC,6BACGsB,EAAchB,KAAI,SAACyB,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YEhElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9ee5c62b.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = Array.from({ length: numberOfPages }, (_, i) => i + 1);\n\n  const isFirstPageSelected = currentPage === 1;\n  const isLastPageSelected = currentPage === pages.length;\n\n  const pageChangeHandler = (page: number) => {\n    if (page < 1 || page > numberOfPages) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', { disabled: isFirstPageSelected })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPageSelected}\n          onClick={() => pageChangeHandler(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((page) => (\n        <li\n          className={classNames('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => pageChangeHandler(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', { disabled: isLastPageSelected })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPageSelected}\n          onClick={() => pageChangeHandler(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst totalItems = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const numberOfItems = totalItems.length;\n\n  const indexOfFirstItemOnPage = (currentPage - 1) * itemsPerPage;\n  const indexOfLastItemOnPage = indexOfFirstItemOnPage + itemsPerPage;\n\n  const selectedItems = totalItems.slice(\n    indexOfFirstItemOnPage,\n    indexOfLastItemOnPage,\n  );\n\n  const itemsPerPageChangeHandler: React.ChangeEventHandler<\n  HTMLSelectElement\n  > = (event) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstItemOnPage + 1} - ${Math.min(indexOfLastItemOnPage, numberOfItems)} of ${numberOfItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={itemsPerPageChangeHandler}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={numberOfItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {selectedItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}